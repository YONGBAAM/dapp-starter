{"version":3,"sources":["components/Layout.tsx","components/InventoryItem.tsx","routes/inventory.tsx","web3Config.ts","components/AnimalCard.tsx","routes/main.tsx","components/myAnimalCard.tsx","routes/my-animal.tsx","components/SaleAnimalCard.tsx","routes/sale-animal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","_ref","children","react_default","a","createElement","chakra_ui_layout_esm","h","bg","p","justifyContent","alignItems","fontWeight","react_router_dom","to","chakra_ui_button_esm","size","colorScheme","direction","url","InventoryItem","itemId","nftId","ownerWalletAddress","nftDescription","account","_useState","useState","_useState2","Object","slicedToArray","password","setPassword","wallet","trimWallet","length","substring","onClickRetrieve","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","post","postId","address","sent","alert","t0","console","log","stop","apply","this","arguments","w","chakra_ui_input_esm","type","value","onChange","e","target","onClick","Inventory","itemList","setItemList","_useState3","_useState4","getItemList","tt","get","data","map","v","push","error","useEffect","i","key","components_InventoryItem","web3","Web3","window","ethereum","mintAnimalTokenContract","eth","Contract","inputs","stateMutability","anonymous","indexed","internalType","name","outputs","components","saleAnimalTokenContract","AnimalCard","animalType","Main","newAnimalType","setNewAnimalType","onClickMint","balanceLength","animalTokenId","methods","mintAnimalToken","send","from","status","balanceOf","call","tokenOfOwnerByIndex","parseInt","animalTypes","components_AnimalCard","concat","mt","MyAnimalCard","animalPrice","saleStatus","sellPrice","setSellPrice","_useState5","_useState6","myAnimalPrice","setMyAnimalPrice","onClickSell","abrupt","setForSaleAnimalToken","utils","toWei","onClickDeposit","_ref3","_callee2","_context2","safeTransferFrom","walletAddress","description","textAlign","Fragment","display","d","fromWei","MyAnimal","animalCardArray","setAnimalCardArray","setSaleStatus","getAnimalTokens","tempAnimalCardArray","getIsApprovedForAll","isApprovedForAll","onClickApproveToggle","_ref4","_callee3","_context3","setApprovalForAll","ml","templateColumns","gap","myAnimalCard","SaleAnimalCard","getOnSaleAnimalTokens","isBuyable","setIsBuyable","getAnimalTokenOnwer","ownerOf","toLocaleLowerCase","onClickBuy","purchaseAnimalToken","m","disabled","SaleAnimal","saleAnimalCardArray","setSaleAnimalCardArray","onSaleAnimalTokenArrayLength","tempOnSaleArray","getOnSaleAnimalTokenArrayLength","onSaleAnimalTokenArray","animalTokenPrices","components_SaleAnimalCard","App","setAccount","getAccount","accounts","request","method","components_Layout","react_router","path","element","main","my_animal","sale_animal","inventory","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","chakra_ui_react_esm","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f007ff9d.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Stack, Flex, Box, Text, Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nconst Layout: FC = ({ children }) => { // size  = \" 하면 이렇게 자동완성 나오네\n  return (\n    <Stack h=\"100vh\">\n      <Flex\n        bg=\"purple.200\"\n        p={4}\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <Text fontWeight=\"bold\">h662-Animals</Text>\n        </Box>\n\n        <Link to=\"/\">\n\n          <Button size=\"sm\" colorScheme=\"blue\">\n            Main\n          </Button>\n        </Link>\n        <Link to=\"my-animal\">\n          <Button size=\"sm\" colorScheme=\"red\">\n            My Animal\n          </Button>\n        </Link>\n        <Link to=\"sale-animal\">\n          <Button size=\"sm\" colorScheme=\"green\">\n            Sale Animal\n          </Button>\n        </Link>\n        <Link to=\"inventory\">\n          <Button size=\"sm\" colorScheme=\"purple\">\n            Inventory\n          </Button>\n        </Link>\n      </Flex>\n      <Flex\n        direction=\"column\"\n        h=\"full\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {children}\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Layout;","import React, { ChangeEvent, FC, useState } from \"react\";\nimport { Image, Text, Box, Button, InputGroup, Input, InputLeftAddon, Flex, InputRightAddon } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nexport interface InventoryItemProps {\n    itemId: number;\n    nftId: number;\n    ownerWalletAddress: string;\n    nftDescription: string\n    account:string\n}\n\nexport const url = \"http://3.35.14.61:8080\"\n\n\nconst InventoryItem: FC<InventoryItemProps> = ({ itemId, nftId, ownerWalletAddress, nftDescription , account}) => {\n\n    const [password, setPassword] = useState<string>('');\n\n    const wallet = ownerWalletAddress\n    const trimWallet = wallet.length > 10 ?\n        wallet.substring(0, 4) + \"..\" + wallet.substring(wallet.length - 5, wallet.length)\n        : wallet;\n\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n    };\n\n    const onClickRetrieve = async () => {\n        try {\n            const response = await axios.post(url + \"/items/retrieve\", {\n                \"postId\":itemId, \"password\":password, \"address\":account\n            })\n            alert(response)\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    return (\n        // todo: change to text\n        // todo: add id\n\n        <Flex w=\"full\" h=\"5vh\" justifyContent=\"left\" alignItems=\"center\" direction=\"row\">\n            <Text >id: {itemId} nftId: {nftId} w: {trimWallet} {nftDescription} </Text>\n\n            <InputGroup >\n                <Input\n                    w=\"10vh\"\n                    type=\"string\"\n                    value={password}\n                    onChange={onChangePassword}\n\n\n                />\n                <InputRightAddon children=\"password\" />\n            </InputGroup>\n            <Button\n                size=\"sm\"\n                colorScheme=\"blue\"\n                onClick={onClickRetrieve}\n\n            >\n                retrieve\n            </Button>\n        </Flex>\n\n        // 어쩔땐 달러쓰고 어쩔땐 안쓰는거야..\n        // <Image w={150} h={150} src={`images/${animalType}.png`} alt=\"AnimalCard\" />\n    );\n};\n\nexport default InventoryItem;","\nimport React, { FC, useEffect, useState } from \"react\";\nimport { Button, List, ListItem, OrderedList, Text } from \"@chakra-ui/react\"\nimport InventoryItem, { InventoryItemProps, url } from \"../components/InventoryItem\";\n\nimport axios from \"axios\"\n\ninterface InventoryProps {\n    account: string;\n\n}\n\n\nconst Inventory: FC<InventoryProps> = ({ account }) => {\n\n    const [itemList, setItemList] = useState<InventoryItemProps[]>([])\n\n    const [resp, setResp] = useState();\n\n    const getItemList = async () => {\n        try {\n            const response = await axios.get(url + \"/items/\" + account)\n            const tt: InventoryItemProps[] = [];\n            response.data.map((v: InventoryItemProps) => {\n                tt.push(v)\n            })\n            setItemList(tt)\n            console.log(response.data)\n            console.log(itemList)\n\n\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    useEffect(() => {\n        getItemList();\n    }, [])\n\n    return (\n        <List>\n            {itemList &&\n                itemList.map((v, i) => {\n                    return <ListItem key={i}>\n                        <InventoryItem account = {account} nftId={v.nftId} nftDescription={v.nftDescription} itemId={v.itemId} ownerWalletAddress={v.ownerWalletAddress} />\n                    </ListItem>\n                })}\n\n        </List>\n    )\n}\n\nexport default Inventory","import { AbiItem } from \"web3-utils\"\n\nimport Web3 from \"web3\"\n\nconst mintAnimalTokenAbi: AbiItem[] =\n\t[\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"constructor\"\n\t\t},\n\t\t{\n\t\t\t\"anonymous\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"Approval\",\n\t\t\t\"type\": \"event\"\n\t\t},\n\t\t{\n\t\t\t\"anonymous\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": false,\n\t\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"ApprovalForAll\",\n\t\t\t\"type\": \"event\"\n\t\t},\n\t\t{\n\t\t\t\"anonymous\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"from\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"to\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": true,\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"Transfer\",\n\t\t\t\"type\": \"event\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"animalTypes\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"to\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"approve\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"balanceOf\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"_animalTokenOwner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"getAnimalTokens\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"components\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\t\"name\": \"animalTokenId\",\n\t\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\t\"name\": \"animalType\",\n\t\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\t\"name\": \"animalPrice\",\n\t\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"internalType\": \"struct MintAnimalToken.AnimalTokenData[]\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"getApproved\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"isApprovedForAll\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"mintAnimalToken\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"name\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"ownerOf\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"from\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"to\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"safeTransferFrom\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"from\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"to\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\t\"type\": \"bytes\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"safeTransferFrom\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"saleAnimalToken\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"contract SaleAnimalToken\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"setApprovalForAll\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"_saleAnimalToken\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"setSaleAnimalToken\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\t\"type\": \"bytes4\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"supportsInterface\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"symbol\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"tokenByIndex\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"tokenOfOwnerByIndex\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"tokenURI\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"totalSupply\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"from\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"to\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"transferFrom\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t}\n\t]\n\nconst saleAnimalTokenAbi: AbiItem[] =\n\t[\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\"name\": \"_mintAnimalTokenAddress\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"constructor\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"animalTokenPrices\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"_animalTokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"getAnimalTokenPrice\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"getOnSaleAnimalTokenArrayLength\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"mintAnimalTokenAddress\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"contract MintAnimalToken\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"onSaleAnimalTokenArray\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"_animalTokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"purchaseAnimalToken\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"payable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"_animalTokenId\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\"name\": \"_price\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"setForSaleAnimalToken\",\n\t\t\t\"outputs\": [],\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t}\n\t]\n\n\nconst mintAnimalTokenAddress = \"0x6e5FbcE03503044dd2C526e6D8CC9C32DDe1130A\"\nexport const saleAnimalTokenAddress = \"0x53973A79Fd14D914a08746C22a560d5ce9e784a2\"\n\nexport const web3 = new Web3(window.ethereum);\n\nexport const mintAnimalTokenContract = new web3.eth.Contract(\n\tmintAnimalTokenAbi,\n\tmintAnimalTokenAddress\n)\n\nexport const saleAnimalTokenContract = new web3.eth.Contract(\n\tsaleAnimalTokenAbi,\n\tsaleAnimalTokenAddress\n)","import React, { FC } from \"react\";\nimport { Image, Text, Box } from \"@chakra-ui/react\";\n\ninterface AnimalCardProps {\n  animalType: string;\n}\n\nconst AnimalCard: FC<AnimalCardProps> = ({ animalType }) => {\n  return (\n    // todo: change to text\n    // todo: add id\n    <Box>\n    \n      <Text>type: {animalType}</Text>\n    </Box>\n\n    // 어쩔땐 달러쓰고 어쩔땐 안쓰는거야..\n    // <Image w={150} h={150} src={`images/${animalType}.png`} alt=\"AnimalCard\" />\n  );\n};\n\nexport default AnimalCard;","import React, { FC, useState } from \"react\";\nimport { Box, Text, Flex, Button } from \"@chakra-ui/react\";\nimport { mintAnimalTokenContract } from \"../web3Config\";\nimport AnimalCard from \"../components/AnimalCard\";\n\ninterface MainProps {\n  account: string;\n\n}\n\nconst Main: FC<MainProps> = ({ account }) => { // 어카운트를 받아오는과정\n  const [newAnimalType, setNewAnimalType] = useState<string>()\n\n  const onClickMint = async () => {\n\n    try {\n      if (!account) console.error(\"err\")\n      const response = await mintAnimalTokenContract.methods.mintAnimalToken().send({ from: account })\n      console.log(response)\n\n      if (response.status) {\n        const balanceLength = await mintAnimalTokenContract.methods\n          .balanceOf(account).call(); // 컨트랙에서 어웨잇 걸ㅓ주네\n\n        const animalTokenId = await mintAnimalTokenContract.methods\n          .tokenOfOwnerByIndex(account, parseInt(balanceLength, 10) - 1).call()\n\n        const animalType = await mintAnimalTokenContract.methods\n          .animalTypes(parseInt(animalTokenId, 10)).call();\n\n        console.log('' + animalTokenId + \" // 0\" + animalType)\n\n        setNewAnimalType(animalType)\n      }\n\n    } catch (error) {\n      console.error(error)\n    }\n  };\n\n  return <Flex w=\"full\" h=\"100vh\"\n    justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\n    <Box>\n      {newAnimalType ? <div><AnimalCard animalType={newAnimalType} /></div> : <div>Lets mint card</div>}\n    </Box>\n    {`type: ${newAnimalType}`}\n    <Box>\n    </Box>\n    <Button mt={4} size=\"sm\" colorScheme=\"blue\" onClick={onClickMint}>mint</Button>\n  </Flex>\n\n  return <Box>Main</Box>;\n};\n\nexport default Main;\n","import {\n    Box,\n    Button,\n    Input,\n    InputGroup,\n    InputRightAddon,\n    Text,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React, { ChangeEvent, FC, useState } from \"react\";\nimport { mintAnimalTokenContract, saleAnimalTokenContract, web3 } from \"../web3Config\";\n\nimport AnimalCard from \"./AnimalCard\";\nimport { url } from \"./InventoryItem\";\n\nexport interface IMyAnimalCard {\n    animalTokenId: string;\n    animalType: string;\n    animalPrice: string;\n}\n\ninterface MyAnimalCardProps extends IMyAnimalCard {\n    saleStatus: boolean;\n    account: string;\n}\n\nconst MyAnimalCard: FC<MyAnimalCardProps> = ({\n    animalTokenId,\n    animalType,\n    animalPrice,\n    saleStatus,\n    account,\n}) => {\n\n    const [sellPrice, setSellPrice] = useState<string>(\"\"); // 입력값변화는 이런식으로 가져감\n\n    const [password, setPassword] = useState<string>(\"\"); // 입력값변화는 이런식으로 가져감\n\n    // 이건 판매시 새로고침 안되게 하기 위해 유즈스테이트로 잡음. \n    const [myAnimalPrice, setMyAnimalPrice] = useState<string>(animalPrice);\n\n    const onChangeSellPrice = (e: ChangeEvent<HTMLInputElement>) => {\n        setSellPrice(e.target.value);\n    };\n\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n    };\n\n    const onClickSell = async () => {\n        try {\n            if (!account || !saleStatus) return;\n\n            const response = await saleAnimalTokenContract.methods\n                .setForSaleAnimalToken(\n                    animalTokenId,\n                    web3.utils.toWei(sellPrice, \"ether\")\n                )\n                .send({ from: account }); // 등록하는건 센드. 조회하는건 콜.\n\n            if (response.status) {\n                setMyAnimalPrice(web3.utils.toWei(sellPrice, \"ether\"));\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const changgo = \"0xc9B7F6CB9Ee166f4d113B5394A05E346048628d1\"\n\n    const onClickDeposit = async () => {\n        try {\n            mintAnimalTokenContract.methods.safeTransferFrom(account, changgo, parseInt(animalTokenId,10)).send({ from: account });\n\n            const response = await axios.post(url + \"/items/deposit\", {\n                \"nftId\":animalTokenId, \"password\":password, \"walletAddress\":account, \"description\":\"test\"\n            })\n            console.log(response)\n        } catch (error) {\n            console.error\n        }\n    }\n\n    return (// 상속이 아니라 인스턴스로 해결하네\n        <Box textAlign=\"center\" w={150}>\n            <AnimalCard animalType={animalType} />\n            <Box mt={2}>\n                {myAnimalPrice === \"0\" ? (\n                    <>\n                        <InputGroup>\n                            <Input\n                                type=\"number\"\n                                value={sellPrice}\n                                onChange={onChangeSellPrice}\n                            />\n                            <InputRightAddon children=\"Matic\" />\n                        </InputGroup>\n                        <Button size=\"sm\" colorScheme=\"green\" mt={2} onClick={onClickSell} display= \"inline-block\">\n                            Sell\n                        </Button>\n                        <InputGroup>\n                        <Input\n                            type=\"string\"\n                            value={password}\n                            onChange={onChangePassword}\n                        />\n                    </InputGroup>\n                    <Button size=\"sm\" colorScheme=\"blue\" mt={2} onClick={onClickDeposit} display= \"inline-block\">\n                        Deposit\n                    </Button>\n                    </> // 판매버튼\n                ) : (\n                    <Text d=\"inline-block\">{web3.utils.fromWei(myAnimalPrice)} Matic</Text>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default MyAnimalCard;","import { Flex, Button, Grid, Text } from \"@chakra-ui/react\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport MyAnimalCard, { IMyAnimalCard } from \"../components/myAnimalCard\";\nimport { mintAnimalTokenContract, saleAnimalTokenAddress, saleAnimalTokenContract } from \"../web3Config\";\n\n\ninterface MyAnimalProps {\n    account: string;\n}\n\nconst MyAnimal: FC<MyAnimalProps> = ({ account }) => {\n    const [animalCardArray, setAnimalCardArray] = useState<IMyAnimalCard[]>();\n\n\n    const [saleStatus, setSaleStatus] = useState<boolean>(false); // (ㅊㅗ기값)\n\n    const getAnimalTokens = async () => {\n\n        try {\n\n\n            const balanceLength = await mintAnimalTokenContract.methods\n                .balanceOf(account).call()\n\n            if (balanceLength === \"0\") return;\n\n            const tempAnimalCardArray: IMyAnimalCard[] = [];\n\n            const response = await mintAnimalTokenContract.methods\n                .getAnimalTokens(account)\n                .call();\n\n            response.map((v: IMyAnimalCard) => {\n                tempAnimalCardArray.push({\n                    animalTokenId: v.animalTokenId,\n                    animalType: v.animalType,\n                    animalPrice: v.animalPrice,\n                });\n            });\n\n            setAnimalCardArray(tempAnimalCardArray)\n\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const getIsApprovedForAll = async () => {\n        try {\n            const response = await mintAnimalTokenContract.methods\n                .isApprovedForAll(account, saleAnimalTokenAddress)\n                .call();\n\n            if (response) {\n                setSaleStatus(response);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const onClickApproveToggle = async () => {\n        try {\n            if (!account) return;\n\n            const response = await mintAnimalTokenContract.methods\n                .setApprovalForAll(saleAnimalTokenAddress, !saleStatus)\n                .send({ from: account });\n\n            if (response.status) {\n                setSaleStatus(!saleStatus);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    \n    useEffect(() => {\n        if (!account) return;\n        getIsApprovedForAll();\n        getAnimalTokens();\n    }, [account]\n    )\n\n    useEffect(() => {\n        console.log(animalCardArray)\n\n    }, [animalCardArray])\n\n    return (\n        <>\n            <Flex alignItems=\"center\">\n                <Text display=\"inline-block\">\n                    Sale Status : {saleStatus ? \"True\" : \"False\"}\n                </Text>\n                <Button\n                    size=\"xs\"\n                    ml={2}\n                    colorScheme={saleStatus ? \"red\" : \"blue\"}\n                    onClick={onClickApproveToggle}\n                >\n                    {saleStatus ? \"Cancel\" : \"Approve\"}\n                </Button>\n            </Flex>\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={8} mt={4}>\n                {animalCardArray &&\n                    animalCardArray.map((v, i) => {\n                        return (\n                            <MyAnimalCard\n                                key={i}\n                                animalTokenId={v.animalTokenId}\n                                animalType={v.animalType}\n                                animalPrice={v.animalPrice}\n                                saleStatus={saleStatus}\n                                account={account}\n                            />\n                        );\n                    })}\n            </Grid>\n        </>\n    )\n\n}\n\nexport default MyAnimal","import { Box, Button, Text } from \"@chakra-ui/react\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { mintAnimalTokenContract, saleAnimalTokenContract, web3 } from \"../web3Config\";\nimport AnimalCard from \"./AnimalCard\";\n\ninterface SaleAnimalCardProps {\n    animalType: string;\n    animalPrice: string;\n    animalTokenId: string;\n    account: string;\n    getOnSaleAnimalTokens: () => Promise<void>; // async함수의 경우 타입을 이렇게 잡아줘야함\n}\n\nconst SaleAnimalCard: FC<SaleAnimalCardProps> = ({\n    animalType,\n    animalPrice,\n    animalTokenId,\n    account,\n    getOnSaleAnimalTokens\n}) => {\n\n    const [isBuyable, setIsBuyable] = useState<boolean>(false);\n\n    const getAnimalTokenOnwer = async () => {\n        try {\n            const response = await mintAnimalTokenContract.methods\n                .ownerOf(animalTokenId)\n                .call();\n\n            setIsBuyable(\n                response.toLocaleLowerCase() === account.toLocaleLowerCase()\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const onClickBuy = async () => {\n        try {\n            if (!account) return;\n\n            const response = await saleAnimalTokenContract.methods\n                .purchaseAnimalToken(animalTokenId)\n                .send({ from: account, value: animalPrice });\n\n            if (response.status) {\n                getOnSaleAnimalTokens();\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        getAnimalTokenOnwer();\n    }, []);\n\n\n    return (\n        <Box textAlign=\"center\" w={150}>\n            <AnimalCard animalType={animalType} />\n            <Box>\n                <Text d=\"inline-block\">{web3.utils.fromWei(animalPrice)} Matic</Text>\n                <Button\n                    size=\"sm\"\n                    colorScheme=\"green\"\n                    m={2}\n                    disabled={isBuyable}\n                    onClick={onClickBuy}\n                >\n                    Buy\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default SaleAnimalCard;\n\nfunction animalTokenId(animalTokenId: any) {\n    throw new Error(\"Function not implemented.\");\n}\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Grid } from \"@chakra-ui/react\";\nimport { IMyAnimalCard } from \"../components/myAnimalCard\";\nimport {\n    mintAnimalTokenContract,\n    saleAnimalTokenContract,\n} from \"../web3Config\";\nimport SaleAnimalCard from \"../components/SaleAnimalCard\";\n\ninterface SaleAnimalProps {\n    account: string;\n}\n\nconst SaleAnimal: FC<SaleAnimalProps> = ({ account }) => {\n    const [saleAnimalCardArray, setSaleAnimalCardArray] = useState<IMyAnimalCard[]>();\n\n    const getOnSaleAnimalTokens = async () => {\n        try {\n            const onSaleAnimalTokenArrayLength = await saleAnimalTokenContract.methods\n                .getOnSaleAnimalTokenArrayLength()\n                .call();\n\n            const tempOnSaleArray: IMyAnimalCard[] = [];\n\n            for (let i = 0; i < parseInt(onSaleAnimalTokenArrayLength, 10); i++) {\n                const animalTokenId = await saleAnimalTokenContract.methods\n                    .onSaleAnimalTokenArray(i)\n                    .call();\n\n                const animalType = await mintAnimalTokenContract.methods\n                    .animalTypes(animalTokenId)\n                    .call();\n\n                const animalPrice = await saleAnimalTokenContract.methods\n                    .animalTokenPrices(animalTokenId)\n                    .call();\n\n                tempOnSaleArray.push({ animalTokenId, animalType, animalPrice });\n            }\n\n            setSaleAnimalCardArray(tempOnSaleArray);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        getOnSaleAnimalTokens();\n    }, []);\n\n    useEffect(() => {\n        console.log(saleAnimalCardArray);\n    }, [saleAnimalCardArray]);\n\n    return (\n        <Grid mt={4} templateColumns=\"repeat(4, 1fr)\" gap={8}>\n            {saleAnimalCardArray &&\n                saleAnimalCardArray.map((v, i) => {\n                    return (\n                        <SaleAnimalCard\n                            key={i}\n                            animalType={v.animalType}\n                            animalPrice={v.animalPrice}\n                            animalTokenId={v.animalTokenId}\n                            getOnSaleAnimalTokens={getOnSaleAnimalTokens}\n                            account={account}\n                        />\n                    );\n                })}\n        </Grid>\n    );\n};\n\nexport default SaleAnimal;","import React, { FC, useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Inventory from \"./routes/inventory\";\n\nimport Main from \"./routes/main\";\nimport MyAnimal from \"./routes/my-animal\";\nimport SaleAnimal from \"./routes/sale-animal\";\n\nconst App: FC = () => {\n\n  const [account, setAccount] = useState<string>(\"\")\n\n  const getAccount = async () => {\n    try {\n      if (window.ethereum) {// 메마 있어야 실행됨.\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        })\n\n        setAccount(accounts[0])\n\n      }\n      else {\n        alert(\"Install Metamask\")\n      }\n    } catch (error) {\n\n      console.error(error)\n    }\n  }\n  useEffect(() => {\n    getAccount();\n\n  }, [account])\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Main account={account} />} />\n          <Route path=\"my-animal\" element={<MyAnimal account={account} />} />\n          <Route\n            path=\"sale-animal\"\n            element={<SaleAnimal account={account} />}\n          />\n          <Route\n            path=\"inventory\"\n            element={<Inventory account={account} />}\n          />\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}